syntax = "v1"

type ChatHistoryRequest {
	Page     int  `form:"page,optional"`
	Limit    int  `form:"limit,optional"`
	FriendID uint `form:"friendId"` // 好友id
}

type ChatHistoryResponse {
	ID        uint   `json:"id"`
	UserID    uint   `json:"userId"`
	Avatar    string `json:"avatar"`
	Nickname  string `json:"nickname"`
	CreatedAt string `json:"created_at"` // 消息时间
// Msg any `json:"msg"`
// SystemMsg any `json:"systemMsg"`
}

type ChatSessionRequest {
	Page  int `form:"page,optional"`
	Limit int `form:"limit,optional"`
	Key   int `form:"key,optional"`
}

type ChatSession {
	UserID     uint   `json:"userId"`
	Avatar     string `json:"avatar"`
	Nickname   string `json:"nickname"`
	CreatedAt  string `json:"created_at"` // 消息时间
	MsgPreview string `json:"msgPreview"` // 消息预览
	IsTop      bool   `json:"isTop"` // 是否置顶
}

type ChatSessionResponse {
	List  []ChatSession `json:"list"`
	Count int64         `json:"count"`
}

type UserTopRequest {
	FriendID uint `json:"friendId"` // 好友id
}

type UserTopResponse {}

@server (
	prefix: /api/chat
)
service chat {
	@doc (
		summary:     "聊天记录接口"
		description: "聊天记录接口"
	)
	@handler chatHistory
	get /history (ChatHistoryRequest) returns (ChatHistoryResponse)

	@doc (
		summary:     "最近聊天会话列表"
		description: "最新聊天会话列表"
	)
	@handler chatSession
	get /session (ChatSessionRequest) returns (ChatSessionResponse) // 最近会话列表

	@doc (
		summary:     "好友置顶"
		description: "好友置顶"
	)
	@handler userTop
	post /user_top (UserTopRequest) returns (UserTopResponse) // 好友置顶
}

//goctl api go -api chat_api.api -dir ./chat_api --home ../template
