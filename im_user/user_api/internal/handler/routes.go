// Code generated by goctl. DO NOT EDIT.
// goctl 1.7.3

package handler

import (
	"net/http"

	"im_server/im_user/user_api/internal/svc"

	"github.com/zeromicro/go-zero/rest"
)

func RegisterHandlers(server *rest.Server, serverCtx *svc.ServiceContext) {
	server.AddRoutes(
		[]rest.Route{
			{
				// 好友添加接口
				Method:  http.MethodPost,
				Path:    "/add",
				Handler: AddUserHandler(serverCtx),
			},
			{
				// 好友信息接口
				Method:  http.MethodGet,
				Path:    "/friend_info",
				Handler: FriendInfoHandler(serverCtx),
			},
			{
				// 好友列表获取
				Method:  http.MethodGet,
				Path:    "/friend_list",
				Handler: FriendListHandler(serverCtx),
			},
			{
				// 好友备注修改
				Method:  http.MethodPut,
				Path:    "/friends",
				Handler: FriendNoticeUpdateHandler(serverCtx),
			},
			{
				// 好友删除接口
				Method:  http.MethodDelete,
				Path:    "/friends",
				Handler: FriendDeleteHandler(serverCtx),
			},
			{
				// 用户信息获取接口
				Method:  http.MethodGet,
				Path:    "/info",
				Handler: UserInfoHandler(serverCtx),
			},
			{
				// 用户信息更新接口
				Method:  http.MethodPut,
				Path:    "/info",
				Handler: UserInfoUpdateHandler(serverCtx),
			},
			{
				// 好友搜索接口
				Method:  http.MethodGet,
				Path:    "/search",
				Handler: FriendSearchHandler(serverCtx),
			},
			{
				// 好友验证接口
				Method:  http.MethodPost,
				Path:    "/valid",
				Handler: UserValidHandler(serverCtx),
			},
			{
				// 好友验证列表
				Method:  http.MethodGet,
				Path:    "/valid",
				Handler: UserValidListHandler(serverCtx),
			},
			{
				// 好友验证状态操作
				Method:  http.MethodPut,
				Path:    "/valid_status",
				Handler: validStatusHandler(serverCtx),
			},
		},
		rest.WithPrefix("/api/user"),
	)
}
