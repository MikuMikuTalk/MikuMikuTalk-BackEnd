syntax = "v1"

type UserInfoRequest {
	UserName string `json:"username"`
}

type VerificationQuestion {
	Problem1 *string `json:"problem1,optional" user_conf:"problem1"`
	Problem2 *string `json:"problem2,optional" user_conf:"problem2"`
	Problem3 *string `json:"problem3,optional" user_conf:"problem3"`
	Answer1  *string `json:"answer1,optional" user_conf:"answer1"`
	Answer2  *string `json:"answer2,optional" user_conf:"answer2"`
	Answer3  *string `json:"answer3,optional" user_conf:"answer3"`
}

type UserInfoResponse {
	UserID               uint                  `json:"userID"`
	Nickname             string                `json:"nickname"`
	Abstract             string                `json:"abstract"`
	Avatar               string                `json:"avatar"`
	RecallMessage        *string               `json:"recallMessage"`
	FriendOnline         bool                  `json:"friendOnline"`
	Sound                bool                  `json:"sound"`
	SecureLink           bool                  `json:"secureLink"`
	SavePwd              bool                  `json:"savePwd"`
	SearchUser           int8                  `json:"searchUser"`
	Verification         int8                  `json:"verification"`
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion"`
}

type UserInfoUpdateRequest {
	Nickname             *string               `json:"nickname,optional" user:"nickname"`
	Abstract             *string               `json:"abstract,optional" user:"abstract"`
	Avatar               *string               `json:"avatar,optional" user:"avatar"`
	RecallMessage        *string               `json:"recallMessage,optional" user_conf:"recall_message"`
	FriendOnline         *bool                 `json:"friendOnline,optional" user_conf:"friend_online"`
	Sound                *bool                 `json:"sound,optional" user_conf:"sound"`
	SecureLink           *bool                 `json:"secureLink,optional" user_conf:"secure_link"`
	SavePwd              *bool                 `json:"savePwd,optional" user_conf:"save_pwd"`
	SearchUser           *int8                 `json:"searchUser,optional" user_conf:"search_user"`
	Verification         *int8                 `json:"verification,optional" user_conf:"verification"`
	VerificationQuestion *VerificationQuestion `json:"verificationQuestion,optional" user_conf:"verification_question"`
}

type UserInfoUpdateResponse {}

type FriendInfoRequest {
	FriendName string `form:"friend_name"`
}

type FriendInfoResponse {
	FriendID uint   `json:"friendID"`
	Nickname string `json:"nickname"`
	Abstract string `json:"abstract"`
	Avatar   string `json:"avatar"`
	Notice   string `json:"notice"`
}

type FriendListRequest {
	Role  int8 `header:"Role"`
	Page  int  `form:"page,optional"`
	Limit int  `form:"limit,optional"`
}

type FriendListResponse {
	List  []FriendInfoResponse `json:"list"`
	Count int64                `json:"count"`
}

type FriendNoticeUpdateRequest {
	FriendID uint   `json:"friendID"`
	Notice   string `json:"notice"` // 备注
}

type FriendNoticeUpdateResponse {}

service users {
	@doc (
		summary: "用户信息获取接口"
	)
	@handler UserInfo
	get /api/user/info (UserInfoRequest) returns (UserInfoResponse)

	@doc (
		summary: "用户信息更新接口"
	)
	@handler UserInfoUpdate
	put /api/user/info (UserInfoUpdateRequest) returns (UserInfoUpdateResponse)

	@doc (
		summary: "好友信息接口"
	)
	@handler FriendInfo
	get /api/user/friend_info (FriendInfoRequest) returns (FriendInfoResponse)

	@doc (
		summary: "好友列表获取"
	)
	@handler FriendList
	get /api/user/friend_list (FriendListRequest) returns (FriendListResponse)

	@doc (
		summary: "好友备注修改"
	)
	@handler FriendNoticeUpdate
	put /api/user/friends (FriendNoticeUpdateRequest) returns (FriendNoticeUpdateResponse) // 修改好友备注
}

